
1. Implement three nodes point ~ to point network with duplex links be
them. Set the queue size, vary the bandwidth and find the number of p
dropped.

set ns [new Simulator] 
set nf [open lab1.nam w] 
$ns namtrace-all $nf 

set tf [open lab1.tr w] 
$ns trace-all $tf

proc finish { } { 
global ns nf tf

$ns flush-trace 

close $nf

close $tf 
exec nam lab1.nam &

exit0}

set n0 [$ns node]  
set n1 [$ns node] 
set n2 [$ns node] 
set n3 [$ns node]

$ns duplex-link $n0 $n2 200Mb 10ms DropTail 
$ns duplex-link $n1 $n2 100Mb 5ms DropTail 
$ns duplex-link $n2 $n3 1Mb 1000ms DropTail

$ns queue-limit $n0 $n2 50 
$ns queue-limit $n1 $n2 50

set udp0 [new Agent/UDP] 
$ns attach-agent $n0  $udp0 

set cbr0 [new Application/Traffic/CBR] 

$cbr0 set packetSize_ 500 
$cbr0 set interval_ 0.005
$cbr0 attach-agent $udp0

set udp1  [new Agent/UDP]
$ns attach-agent $n1 $udp1

set cbr1 [new Application/Traffic/CBR]
$cbr1 attach-agent Sudpl

set udp2 [new Agent/UDP]
$ns attach-agent $n2 Sudp2

set cbr2 [new Application/Traffic/CBR]
$cbr2 attach-agent $udp2

set null0 [new Agent/NULL]
$ns attach-agent $n3 $null0

$ns connect $udp0 $null0
$ns connect $udp1 $null0

$ns at 0.1 "$cbr0 start"
$ns at 0.2 "$cbr1 start"
$ns at 1.0 "finish"

$ns run

BEGIN{
drop=0;
}{
if($1=="d"){
drop++;
printf("%s \t %s \n",$5,$11);
}
}
END{
printf("total number of %s packets dropped due to congestion = %d\n",$5,drop);
}


